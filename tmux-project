#!/usr/bin/env bash

SCRIPT_NAME=${0##*/}
VERSION=0.0.0
PROJECT_DIR="$HOME/.config/tmux-project"

usage() {
  cat << EOF
usage: ${SCRIPT_NAME} <project name>

options:
  -h, --help       Display this help message
  -n, --new        Create a new tmux-project file
  -v, --version    Display the version number

EOF

  exit 0
}

version() {
  cat << EOF
tmux-project ${VERSION}

EOF

  exit 0
}

new_project() {
  # Remove the option parameter
  shift

  PROJECT_NAME=$1

  if [ -z "$PROJECT_NAME" ]; then
    echo "$SCRIPT_NAME: specify a project name: ${SCRIPT_NAME} --new <project name>"
    exit 1
  fi

  if [[ -f "$PROJECT_DIR/$PROJECT_NAME" ]]; then
    echo "$SCRIPT_NAME: '$PROJECT_NAME' already exists in $PROJECT_DIR"
    exit 1
  fi

  touch "$PROJECT_DIR/$PROJECT_NAME"

  exit 0
}

# Transform long options to short options
for arg in "$@"; do
  shift
  case "$arg" in
    "--help")
      set -- "$@" "-h"
      ;;
    "--new")
      set -- "$@" "-n"
      ;;
    "--version")
      set -- "$@" "-v"
      ;;
    *)
      set -- "$@" "$arg"
      ;;
  esac
done

# Parse short options
while getopts "hnv" opt; do
  case "$opt" in
    "h")
      usage
      ;;
    "n")
      new_project $@
      ;;
    "v")
      version
      ;;
    "?")
      usage >&2
      exit 1
      ;;
  esac
done

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

PROJECT=$1

if [ ! -f "$PROJECT_DIR/$PROJECT" ]; then
  echo "$SCRIPT_NAME: '$PROJECT' not found in $PROJECT_DIR"
  exit 1
fi

if ! tmux has-session -t "$PROJECT" > /dev/null 2>&1; then
  TMUX='' tmux new-session -d -s "$PROJECT"
  xargs -L1 tmux < "$PROJECT_DIR/$PROJECT"
  tmux select-window -t 1
fi

if [ -z "$TMUX" ]; then
  tmux attach -t "$PROJECT"
else
  tmux switch-client -t "$PROJECT"
fi
